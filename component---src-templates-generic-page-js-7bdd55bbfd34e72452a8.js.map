{"version":3,"file":"component---src-templates-generic-page-js-7bdd55bbfd34e72452a8.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/GenericHeader.js","webpack://gatsby-starter-default/./src/components/PersonContainer.js","webpack://gatsby-starter-default/./src/components/SidebarGallery.js","webpack://gatsby-starter-default/./src/components/People.js","webpack://gatsby-starter-default/./src/components/Events.js","webpack://gatsby-starter-default/./src/templates/generic-page.js"],"sourcesContent":["import React from 'react';\nimport MarkdownText from './MarkdownText';\n\nexport const GenericHeader = ({ title, description, headerImageUrl, program, location }) => {\n  return (\n    <div className=\"px-8\">\n      <div className=\"grid lg:grid-cols-5 md:grid-cols-5 gap-4\">\n        {headerImageUrl ?\n          <div\n            className=\"lg:col-span-3 md:col-span-5 sm:col-span-5 h-full notched notched--bg notched--bg--img header-img-container\"\n            style={{ backgroundImage: `url(${headerImageUrl})` }}>\n          </div>\n          :\n          <div className=\"lg:col-span-3 md:col-span-5 sm:col-span-5 h-full notched notched--bg notched--bg--img header-img-container\"></div>\n        }\n        <div className=\"generic-header lg:col-span-2 md:col-span-5 sm:col-span-5 h-full notched notched--border\">\n          {program && (\n            <span className=\"program-title\">{program}</span>\n          )}\n          <h1 className=\"generic-heading-1\">{title}</h1>\n          {description && (\n            <MarkdownText content={description} />\n          )}\n          {location && (\n            <p className=\"location\">{location}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};","import React from 'react';\n\n\nexport const PersonContainer = ({ name, title, affiliation, profileImageUrl }) => {\n\n  return (\n    <div className=\"person-container\">\n      {profileImageUrl && (\n        <div\n          className=\"person-container__image\"\n          style={{ backgroundImage: `url(${profileImageUrl})` }}\n        ></div>\n      )}\n      <p className=\"person-container__name\">{name}</p>\n      <p className=\"person-container__title\">{title}</p>\n      <p className=\"person-container__affiliation\">{affiliation}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport MarkdownText from './MarkdownText';\n\nexport const SidebarGallery = ({ data }) => {\n  console.log(data)\n  return (\n    <div className=\"col-span-8 lg:col-span-2 sidebar-image\">\n      {data.map(figure => {\n        return (\n          <div\n            key={figure.id}\n            className=\"sidebar-image__container\"\n          >\n            { figure.image && <img src={figure.image.url} alt={figure.image.description} />}\n            <div className=\"sidebar-image__description\">\n              <MarkdownText content={figure.caption && figure.caption.childMarkdownRemark.html} />\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\nimport { PersonContainer } from '../components/PersonContainer';\n\nexport const PeopleTemplate = () => {\n  const data = useStaticQuery(graphql`\n    query PeoplePageQuery {\n      teamMembers: allContentfulPeople(filter: { type: { eq: \"OSHWA Team\" } }) {\n        edges {\n          node {\n            id\n            displayName\n            image {\n              id\n              file {\n                url\n                fileName\n                contentType\n              }\n            }\n            prettyUrl\n            title\n            affiliation\n            type\n          }\n        }\n      }\n      boardMembers: allContentfulPeople(\n        filter: { type: { eq: \"OSHWA Board Members\" } }\n      ) {\n        edges {\n          node {\n            id\n            displayName\n            image {\n              id\n              file {\n                url\n                fileName\n                contentType\n              }\n            }\n            prettyUrl\n            title\n            affiliation\n            type\n          }\n        }\n      }\n      communityAlumni: allContentfulPeople(\n        filter: { type: { eq: \"OSHWA Community Alumni\" } }\n      ) {\n        edges {\n          node {\n            id\n            displayName\n            image {\n              id\n              file {\n                url\n                fileName\n                contentType\n              }\n            }\n            externalUrl\n            title\n            affiliation\n            type\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div className=\"px-8 pb-5\">\n        {data.teamMembers && (\n          <>\n            <h2 className=\"generic-heading-2 py-8\">Team</h2>\n            <div className=\"grid lg:grid-cols-4 md:grid-cols-4 gap-4\">\n              {data.teamMembers.edges.map(teamMember => {\n                return (\n                  <Link\n                    key={teamMember.node.id}\n                    className=\"lg:col-span-1 md:col-span-2 notched notched--border notched--border--hover\"\n                    to={teamMember.node.prettyUrl}\n                  >\n                    <PersonContainer\n                      name={teamMember.node.displayName}\n                      title={teamMember.node.title}\n                      profileImageUrl={teamMember.node.image.file.url}\n                    />\n                  </Link>\n                );\n              })}\n            </div>\n          </>\n        )}\n\n        {data.boardMembers && (\n          <>\n            <h2 className=\"generic-heading-2 generic-heading-2--2nd-heading py-8\">\n              Board Members\n            </h2>\n            <div className=\"grid lg:grid-cols-4 md:grid-cols-4 gap-4\">\n              {data.boardMembers.edges.map(boardMember => {\n                return (\n                  <Link\n                    key={boardMember.node.id}\n                    className=\"lg:col-span-1 md:col-span-2 notched notched--border notched--border--hover\"\n                    to={boardMember.node.prettyUrl}\n                  >\n                    <PersonContainer\n                      name={boardMember.node.displayName}\n                      title={boardMember.node.title}\n                      affiliation={boardMember.node.affiliation}\n                      profileImageUrl={boardMember.node.image.file.url}\n                    />\n                  </Link>\n                );\n              })}\n            </div>\n          </>\n        )}\n\n        {data.communityAlumni && (\n          <>\n            <h2 className=\"generic-heading-2 generic-heading-2--2nd-heading py-8\">\n              OSHWA Community Alumni\n            </h2>\n            <div className=\"grid lg:grid-cols-4 md:grid-cols-4 gap-4\">\n              {data.communityAlumni.edges.map(alum => {\n                let profileCard = alum.node.externalUrl ? (\n                  <a\n                    key={alum.node.id}\n                    className=\"lg:col-span-1 md:col-span-2 notched notched--border notched--border--hover community-alumni\"\n                    href={alum.node.externalUrl}\n                  >\n                    <PersonContainer\n                      name={alum.node.displayName}\n                      title={alum.node.title}\n                      affiliation={alum.node.affiliation}\n                    />\n                  </a>\n                ) : (\n                  <div\n                    key={alum.node.id}\n                    className=\"lg:col-span-1 md:col-span-2 notched notched--border notched--border--hover community-alumni\"\n                    href={alum.node.externalUrl}\n                  >\n                    <PersonContainer\n                      name={alum.node.displayName}\n                      title={alum.node.title}\n                      affiliation={alum.node.affiliation}\n                    />\n                  </div>\n                );\n                return profileCard;\n              })}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nexport const EventsTemplate = () => {\n  const data = useStaticQuery(graphql`\n    query {\n       allContentfulEvent {\n        edges {\n          node {\n            id\n            title\n            dateStart\n            dateEnd\n            fields {\n              slug\n            }\n            type\n          }\n        }\n      }\n    }\n  `);\n\n  const today = new Date();\n  const pastEvents = [];\n  const upcomingEvents = [];\n\n  data.allContentfulEvent.edges.forEach(({ node }) => {\n    const eventEndDate = new Date(node.dateEnd);\n    eventEndDate >= today\n      ? upcomingEvents.push({ ...node })\n      : pastEvents.push({ ...node });\n  });\n\n  const sortDates = (eventData, ascending = true) => {\n    eventData.sort((a, b) => {\n      const dateA = new Date(a.dateEnd);\n      const dateB = new Date(b.dateEnd);\n      return ascending ? dateA - dateB : dateB - dateA;\n    });\n  };\n\n  sortDates(upcomingEvents);\n  sortDates(pastEvents, false);\n\n  return (\n    <>\n      <div className=\"px-8 pb-5\">\n        {upcomingEvents.length > 0 && (\n          <>\n            <h2 className=\"generic-heading-2 py-8\">Upcoming</h2>\n            <div className=\"grid lg:grid-cols-4 md:grid-cols-4 gap-4\">\n              {upcomingEvents.map(event => {\n                return (\n                  <Link\n                    key={event.fields.slug}\n                    className=\"lg:col-span-1 md:col-span-2 notched notched--border notched--border--hover section-card\"\n                    to={`/events/${event.fields.slug}`}\n                  >\n                    <div className=\"event-container\">\n                      <p className=\"event-title\">{event.title}</p>\n                    </div>\n\n                    {event.type === 'Open Hardware Summit' && (\n                      <>\n                        <StaticImage\n                          className=\"section-card__image image-theme--light\"\n                          src=\"../images/icon-summit.svg\"\n                          alt=\"Temp Oshwa Logo\"\n                          placeholder='none'\n                        />\n                        <StaticImage\n                          className=\"section-card__image image-theme--dark\"\n                          src=\"../images/icon-summit-white.svg\"\n                          alt=\"Temp Oshwa Logo\"\n                          placeholder='none'\n                        />\n                      </>\n                    )}\n\n                    {event.type === 'Open Hardware Month' && (\n                      <>\n                        <StaticImage\n                          className=\"section-card__image image-theme--light\"\n                          src=\"../images/icon-ohmonth.svg\"\n                          alt=\"Temp Oshwa Logo\"\n                          placeholder='none'\n                        />\n                        <StaticImage\n                          className=\"section-card__image image-theme--dark\"\n                          src=\"../images/icon-ohmonth-white.svg\"\n                          alt=\"Temp Oshwa Logo\"\n                          placeholder='none'\n                        />\n                      </>\n                    )}\n                  </Link>\n                );\n              })}\n            </div>\n          </>\n        )}\n\n        <h2 className=\"generic-heading-2 generic-heading-2--2nd-heading py-8\">Past</h2>\n        <div className=\"grid lg:grid-cols-4 md:grid-cols-4 gap-4\">\n          {pastEvents.map(event => {\n            return (\n              <Link\n                key={event.fields.slug}\n                className=\"lg:col-span-1 md:col-span-4 sm:col-span-4 notched notched--border notched--border--hover section-card\"\n                to={`/events/${event.fields.slug}`}\n              >\n                <div className=\"event-container\">\n                  <p className=\"event-title\">{event.title}</p>\n                </div>\n\n                {event.type === 'Open Hardware Summit' && (\n                  <>\n                    <StaticImage\n                      className=\"section-card__image image-theme--light\"\n                      src=\"../images/icon-summit.svg\"\n                      alt=\"Temp Oshwa Logo\"\n                      placeholder='none'\n                    />\n                    <StaticImage\n                      className=\"section-card__image image-theme--dark\"\n                      src=\"../images/icon-summit-white.svg\"\n                      alt=\"Temp Oshwa Logo\"\n                      placeholder='none'\n                    />\n                  </>\n                )}\n\n                {event.type === 'Open Hardware Month' && (\n                  <>\n                    <StaticImage\n                      className=\"section-card__image image-theme--light\"\n                      src=\"../images/icon-ohmonth.svg\"\n                      alt=\"Temp Oshwa Logo\"\n                      placeholder='none'\n                    />\n                    <StaticImage\n                      className=\"section-card__image image-theme--dark\"\n                      src=\"../images/icon-ohmonth-white.svg\"\n                      alt=\"Temp Oshwa Logo\"\n                      placeholder='none'\n                    />\n                  </>\n                )}\n              </Link>\n            );\n          })}\n        </div>\n      </div >\n    </>\n  );\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport { GenericHeader } from '../components/GenericHeader';\nimport { PeopleTemplate } from '../components/People';\nimport { EventsTemplate } from '../components/Events';\nimport { SidebarGallery } from '../components/SidebarGallery';\nimport RichText from '../components/RichText';\n\nexport default function ProjectPage({ data }) {\n  const pageData = data.contentfulGenericPage;\n\n  return (\n    <Layout>\n      <>\n        <GenericHeader\n          title={pageData.title}\n          description={pageData.shortDescription.childMarkdownRemark.html}\n          headerImageUrl={pageData.headerImage ? pageData.headerImage.url : null}\n        />\n\n        {pageData.title === \"Team\" && (\n          <PeopleTemplate />\n        )}\n\n        {pageData.title === \"Events\" && (\n          <EventsTemplate />\n        )}\n\n        {(pageData.title !== \"Events\" && pageData.title !== \"Team\") && (\n          <div className=\"px-8 pb-5 generic-container\">\n            <div className=\"grid grid-cols-8 lg:grid-cols-6\">\n              <div className=\"col-span-10 lg:col-span-4 content-container\">\n                {pageData.body && (\n                  <RichText content={pageData.body} />\n                )}\n              </div>\n\n              {pageData.sidebarGallery && (\n                <SidebarGallery data={pageData.sidebarGallery} />\n              )}\n            </div>\n          </div>\n        )}\n\n        {pageData.relatedResources && (\n          <div className=\"p-8 pb-5\">\n            <h2 className=\"generic-heading-2 py-8\">{pageData.pinnedTitle}</h2>\n            <div className=\"list\">\n              <div className=\"grid lg:grid-cols-4 md:grid-cols-3 gap-4\">\n                {pageData.relatedResources &&\n                  pageData.relatedResources.map(resource => {\n                    return (\n                      <a\n                        key={resource.id}\n                        href={`/resources/${resource.prettyUrl}`}\n                        className=\"lg:col-span-1 md:col-span-4 sm:col-span-4 notched notched--border notched--border--hover list-item\"\n                      >\n                        <p className=\"title\"> {resource.resourceTitle}</p>\n                      </a>\n                    );\n                  })}\n              </div>\n            </div>\n          </div>\n        )}\n      </>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query ($id: String!) {\n    contentfulGenericPage(id: { eq: $id }) {\n      id\n      prettyUrl\n      title\n      shortDescription {\n        childMarkdownRemark {\n           html\n        }\n      }\n      headerImage {\n        url\n      }\n      body {\n        raw\n        references {\n          ... on ContentfulButton {\n            contentful_id\n            __typename\n            id\n            buttonText\n            buttonUrl\n            sys {\n              contentType {\n                sys {\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n      sidebarGallery {\n        id\n        title\n        caption {\n          childMarkdownRemark {\n            html\n          }\n        }\n        image {\n          url\n          title\n          description\n        }\n      }\n      pinnedTitle\n      relatedResources {\n        id\n        resourceTitle\n        prettyUrl\n      }\n    }\n  }\n`;\n"],"names":["GenericHeader","_ref","title","description","headerImageUrl","program","location","React","className","style","backgroundImage","MarkdownText","content","PersonContainer","name","affiliation","profileImageUrl","SidebarGallery","data","console","log","map","figure","key","id","image","src","url","alt","caption","childMarkdownRemark","html","PeopleTemplate","useStaticQuery","teamMembers","edges","teamMember","Link","node","to","prettyUrl","displayName","file","boardMembers","boardMember","communityAlumni","alum","externalUrl","href","EventsTemplate","today","Date","pastEvents","upcomingEvents","allContentfulEvent","forEach","dateEnd","push","sortDates","eventData","ascending","arguments","length","undefined","sort","a","b","dateA","dateB","event","fields","slug","type","StaticImage","placeholder","__imageData","require","ProjectPage","pageData","contentfulGenericPage","Layout","shortDescription","headerImage","body","RichText","sidebarGallery","relatedResources","pinnedTitle","resource","resourceTitle"],"sourceRoot":""}