{"version":3,"file":"component---src-templates-event-page-js-698fb5867e4f804aedb9.js","mappings":"6LAGO,MAAMA,EAAgBC,IAAgE,IAA/D,MAAEC,EAAK,YAAEC,EAAW,eAAEC,EAAc,QAAEC,EAAO,SAAEC,GAAUL,EACrF,OACEM,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKC,UAAU,4CACZJ,EACCG,EAAAA,cAAA,OACEC,UAAU,6GACVC,MAAO,CAAEC,gBAAiB,OAAON,QAGnCG,EAAAA,cAAA,OAAKC,UAAU,+GAEjBD,EAAAA,cAAA,OAAKC,UAAU,2FACZH,GACCE,EAAAA,cAAA,QAAMC,UAAU,iBAAiBH,GAEnCE,EAAAA,cAAA,MAAIC,UAAU,qBAAqBN,GAClCC,GACCI,EAAAA,cAACI,EAAAA,EAAY,CAACC,QAAST,IAExBG,GACCC,EAAAA,cAAA,KAAGC,UAAU,YAAYF,KAI3B,C,mFC4BV,UAjDcL,IAAe,IAAd,KAAEY,GAAMZ,EACrB,MAAMa,EAAWD,EAAKE,gBAChBC,EAAiC,OAAzBF,EAASG,YAAuB,GAAKH,EAASG,YAAYC,IAClEC,EAAQ,GAAGL,EAASM,eAAeN,EAASO,UAElD,OACEd,EAAAA,cAACe,EAAAA,EAAM,KACLf,EAAAA,cAACP,EAAAA,EAAa,CACZE,MAAOY,EAASZ,MAChBI,SAAUQ,EAASR,SACnBF,eAAgBY,EAChBX,QAASc,IAGXZ,EAAAA,cAAA,OAAKC,UAAU,wBACbD,EAAAA,cAAA,OAAKC,UAAU,4CACbD,EAAAA,cAAA,OAAKC,UAAU,gCACZM,EAASS,MAAQhB,EAAAA,cAACiB,EAAAA,EAAQ,CAACZ,QAASE,EAASS,QAEhDhB,EAAAA,cAAA,OAAKC,UAAU,+BACbD,EAAAA,cAAA,OAAKC,UAAU,mBACZM,EAASW,UACRlB,EAAAA,cAACmB,EAAAA,EAAiB,CAChBC,UAAQ,EACRC,KAAK,gBACLtB,SAAUQ,EAASW,WAItBX,EAASe,iBACRf,EAASe,gBAAgBC,KAAIC,GAEE,OAA3BA,EAAe1B,SACbE,EAAAA,cAACmB,EAAAA,EAAiB,CAChBM,IAAKD,EAAeE,GACpBL,KAAM,GAAGG,EAAe1B,QAAQ,GAAGH,SAAS6B,EAAe7B,QAC3DI,SAAU,aAAayB,EAAeG,OAAOC,eAAeJ,EAAe7B,gBAStF,C","sources":["webpack://gatsby-starter-default/./src/components/GenericHeader.js","webpack://gatsby-starter-default/./src/templates/event-page.js"],"sourcesContent":["import React from 'react';\nimport MarkdownText from './MarkdownText';\n\nexport const GenericHeader = ({ title, description, headerImageUrl, program, location }) => {\n  return (\n    <div className=\"px-8\">\n      <div className=\"grid lg:grid-cols-5 md:grid-cols-5 gap-4\">\n        {headerImageUrl ?\n          <div\n            className=\"lg:col-span-3 md:col-span-5 sm:col-span-5 h-full notched notched--bg notched--bg--img header-img-container\"\n            style={{ backgroundImage: `url(${headerImageUrl})` }}>\n          </div>\n          :\n          <div className=\"lg:col-span-3 md:col-span-5 sm:col-span-5 h-full notched notched--bg notched--bg--img header-img-container\"></div>\n        }\n        <div className=\"generic-header lg:col-span-2 md:col-span-5 sm:col-span-5 h-full notched notched--border\">\n          {program && (\n            <span className=\"program-title\">{program}</span>\n          )}\n          <h1 className=\"generic-heading-1\">{title}</h1>\n          {description && (\n            <MarkdownText content={description} />\n          )}\n          {location && (\n            <p className=\"location\">{location}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport { GenericHeader } from '../components/GenericHeader';\nimport { NotchedButtonLink } from '../components/Link';\nimport RichText from '../components/RichText';\n\nconst Event = ({ data }) => {\n  const pageData = data.contentfulEvent;\n  const image = pageData.headerImage === null ? '' : pageData.headerImage.url;\n  const dates = `${pageData.dateStart} - ${pageData.dateEnd}`;\n\n  return (\n    <Layout>\n      <GenericHeader\n        title={pageData.title}\n        location={pageData.location}\n        headerImageUrl={image}\n        program={dates}\n      />\n\n      <div className=\"px-8 pb-5 event-body\">\n        <div className=\"grid lg:grid-cols-5 md:grid-cols-5 gap-4\">\n          <div className=\"lg:col-span-3 md:col-span-5 \">\n            {pageData.body && <RichText content={pageData.body} />}\n          </div>\n          <div className=\"lg:col-span-2 md:col-span-5\">\n            <div className=\"event-btn-links\">\n              {pageData.eventUrl && (\n                <NotchedButtonLink\n                  external\n                  text=\"EVENT WEBSITE\"\n                  location={pageData.eventUrl}\n                />\n              )}\n\n              {pageData.relatedPrograms &&\n                pageData.relatedPrograms.map(relatedProgram => {\n                  return (\n                    relatedProgram.program !== null && (\n                      <NotchedButtonLink\n                        key={relatedProgram.id}\n                        text={`${relatedProgram.program[0].title} ${relatedProgram.title}`}\n                        location={`/programs/${relatedProgram.fields.slugProgram}/${relatedProgram.title}`}\n                      />\n                    )\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Event;\n\nexport const query = graphql`\n  query ($id: String!) {\n    contentfulEvent(id: { eq: $id }) {\n      id\n      title\n      fields {\n        slug\n      }\n      dateStart: dateStart(formatString: \"MMMM DD, YYYY\")\n      dateEnd: dateEnd(formatString: \"MMMM DD, YYYY\")\n      location\n      eventUrl\n      relatedPrograms {\n        id\n        title\n        program {\n          id\n          title\n          prettyUrl\n        }\n        fields {\n          slugProgram\n        }\n      }\n      headerImage {\n        url\n      }\n      body {\n        raw\n      }\n    }\n  }\n`;\n"],"names":["GenericHeader","_ref","title","description","headerImageUrl","program","location","React","className","style","backgroundImage","MarkdownText","content","data","pageData","contentfulEvent","image","headerImage","url","dates","dateStart","dateEnd","Layout","body","RichText","eventUrl","NotchedButtonLink","external","text","relatedPrograms","map","relatedProgram","key","id","fields","slugProgram"],"sourceRoot":""}