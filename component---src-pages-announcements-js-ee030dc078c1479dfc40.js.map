{"version":3,"file":"component---src-pages-announcements-js-ee030dc078c1479dfc40.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/announcements.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Layout from '../components/layout';\nimport { Link } from 'gatsby';\nimport dayjs from 'dayjs';\nimport { FilterBar } from '../components/FilterBar';\nconst sessionsName = 'blog-post-filters';\n\nconst SearchBlogPosts = ({ location }) => {\n  const [query, setQuery] = useState(``);\n  const [results, setResults] = useState([]);\n  const contentfulType = 'ContentfulBlogPost';\n\n  const formatQuery = ({ date = '', contentfulType = '' }) => {\n    let dateQuery = date && date !== '*' ? `+date:${date}` : '';\n    let contentfulTypeQuery = `+contentfulType:${contentfulType}`;\n\n    return `${dateQuery} ${contentfulTypeQuery}`;\n  };\n\n  const handleSearchQuery = () => {\n    let pubDateSelect = document.querySelector('#publicationDate');\n    let date = pubDateSelect.value;\n\n    sessionStorage.setItem(sessionsName, JSON.stringify({ date }));\n\n    const formattedQuery = formatQuery({ date, contentfulType });\n    setQuery(formattedQuery);\n  };\n\n  const matchFiltersToSessions = useCallback(() => {\n    let pubDateSelect = document.querySelector('#publicationDate');\n    let savedSessionsQuery = JSON.parse(sessionStorage.getItem(sessionsName));\n\n    if (savedSessionsQuery && savedSessionsQuery.date) {\n      Array.from(pubDateSelect.options).forEach((option, idx) => {\n        if (option.value === savedSessionsQuery.date) {\n          pubDateSelect.selectedIndex = idx;\n        }\n      });\n    }\n\n    const formattedQuery = formatQuery({ date: pubDateSelect.value, contentfulType });\n    setQuery(formattedQuery);\n  }, [contentfulType]);\n\n  const clearFilters = () => {\n    sessionStorage.removeItem(sessionsName);\n    document.querySelector('#publicationDate').selectedIndex = 0;\n    location.search = '';\n    setQuery(formatQuery({ date: '*', contentfulType }));\n  };\n\n  const handleUrlParams = useCallback(() => {\n    let pubDateParam = new URLSearchParams(location.search).get('year') || '*';\n\n    let pubDateSelect = document.querySelector('#publicationDate');\n    Array.from(pubDateSelect.options).forEach((option, idx) => {\n      if (option.value === pubDateParam) {\n        pubDateSelect.selectedIndex = idx;\n      }\n    });\n\n    const formattedQuery = formatQuery({ date: pubDateParam, contentfulType });\n    setQuery(formattedQuery);\n  }, [location, contentfulType]);\n\n  const sortByDateDesc = results => {\n    return results.sort((a, b) => new Date(b.date) - new Date(a.date));\n  };\n\n  useEffect(() => {\n    const lunrIndex = window.__LUNR__['en'];\n\n    handleUrlParams();\n    matchFiltersToSessions();\n\n    const searchResults = lunrIndex.index.search(query);\n    const searchResultsMapped = searchResults.map(({ ref }) => lunrIndex.store[ref]);\n\n    setResults(sortByDateDesc(searchResultsMapped));\n  }, [query, location, handleUrlParams, matchFiltersToSessions]);\n\n  return (\n    <>\n      <Layout>\n        <>\n          <div className=\"px-8\">\n            <div className=\"grid lg:grid-cols-5 md:grid-cols-5\">\n              <div className=\"col-span-10 mb-5 notched notched--border\">\n                <h1 className=\"generic-heading-1\">Announcements</h1>\n              </div>\n            </div>\n          </div>\n          <FilterBar\n            handleClearFilters={clearFilters}\n            handleSearchQuery={handleSearchQuery}\n            listType=\"blog-post\"\n          />\n\n          <div className={`px-8 py-4 list`}>\n            <div className=\"grid grid lg:grid-cols-4 md:grid-cols-4 gap-4\">\n              {results &&\n                results.map(\n                  result => (\n                    <Link\n                      key={result.id}\n                      to={`/announcements/${result.prettyUrl}`}\n                      className=\"lg:col-span-1 md:col-span-2 sm:col-span-4 notched notched--border notched--border--hover list-item\"\n                    >\n                      <div>\n                        <p className=\"publicationDate publicationDate--blog\">\n                          {dayjs(result.date).format('MMMM D, YYYY')}\n                        </p>\n\n                        <p className=\"title\"> {result.title}</p>\n                      </div>\n                    </Link>\n                  )\n                )}\n            </div>\n          </div>\n        </>\n      </Layout>\n    </>\n  );\n};\n\nexport default SearchBlogPosts;\n"],"names":["sessionsName","_ref","location","query","setQuery","useState","results","setResults","contentfulType","formatQuery","_ref2","date","matchFiltersToSessions","useCallback","pubDateSelect","document","querySelector","savedSessionsQuery","JSON","parse","sessionStorage","getItem","Array","from","options","forEach","option","idx","value","selectedIndex","formattedQuery","handleUrlParams","pubDateParam","URLSearchParams","search","get","useEffect","lunrIndex","window","__LUNR__","searchResultsMapped","index","map","_ref3","ref","store","sort","a","b","Date","sortByDateDesc","React","Layout","className","FilterBar","handleClearFilters","clearFilters","removeItem","handleSearchQuery","setItem","stringify","listType","result","Link","key","id","to","prettyUrl","dayjs","format","title"],"sourceRoot":""}