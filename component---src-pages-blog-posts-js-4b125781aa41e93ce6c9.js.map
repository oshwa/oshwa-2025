{"version":3,"file":"component---src-pages-blog-posts-js-4b125781aa41e93ce6c9.js","mappings":"2MAMA,MAAMA,EAAe,oBA2HrB,UAzHwBC,IAAmB,IAAlB,SAAEC,GAAUD,EACnC,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,IACjCG,EAAiB,qBAqCjBC,GAAkBC,EAAAA,EAAAA,cAAY,KAClC,IAAIC,EAAe,IAAIC,gBAAgBV,EAASW,QAAQC,IAAI,SAAW,IAEvEC,EAAgBJ,GAChBP,EACE,kBAAkBO,qBAAgCH,IACnD,GACA,CAACN,IAEEa,EAAkBC,IACtB,IAAIC,EAAgBC,SAASC,cAAc,oBAC3CC,MAAMC,KAAKJ,EAAcK,SAASC,SAAQ,CAACC,EAAQC,KAC7CD,EAAOE,QAAUV,IACnBC,EAAcU,cAAgBF,EAChC,GACA,EAmBJ,OAXAG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAYC,OAAOC,SAAa,GACtCtB,IAjD6BuB,MAC7B,IAAIf,EAAgBC,SAASC,cAAc,oBACvCc,EAAqBC,KAAKC,MAAMC,eAAeC,QAAQrC,IAGvDiC,GAAsBA,EAAmBK,cAC3ClB,MAAMC,KAAKJ,EAAcK,SAASC,SAAQ,CAACC,EAAQC,KAC7CD,EAAOE,QAAUO,EAAmBK,eACtCrB,EAAcU,cAAgBF,EAChC,IAGJrB,EACE,kBAAkBa,EAAcS,yBAAyBlB,IAC1D,EAoCDwB,GACA,MACMO,EADgBV,EAAUW,MAAM3B,OAAOV,GACHsC,KAAIC,IAAc,IAAb,IAAEC,GAAKD,EACpD,OAAOb,EAAUe,MAAMD,EAAI,IAE7BpC,EAbsBD,IACfA,EAAQuC,MACb,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEE,MAAQ,IAAID,KAAKF,EAAEG,QAW/BC,CAAeX,GAAqB,GAC9C,CAACpC,EAAOM,IAGT0C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKE,UAAU,QACbF,EAAAA,cAAA,OAAKE,UAAU,sCACbF,EAAAA,cAAA,OAAKE,UAAU,4CACbF,EAAAA,cAAA,MAAIE,UAAU,qBAAoB,iBAIxCF,EAAAA,cAACG,EAAAA,EAAS,CACRC,mBArDWC,KACnBpB,eAAeqB,WAAWzD,GAC1BI,EAAS,oBACTc,SAASC,cAAc,oBAAoBQ,cAAgB,EAC3DzB,EAASW,OAAS,EAAE,EAkDZ6C,kBAlFgBA,KACxB,IACIpB,EADgBpB,SAASC,cAAc,oBACVO,MAEjCU,eAAeuB,QAAQ3D,EAAckC,KAAK0B,UAAU,CAAEtB,kBAEtDlC,EACE,kBAAkBkC,qBAAgC9B,IACnD,EA2EOqD,SAAS,cAGXV,EAAAA,cAAA,OAAKE,UAAW,kBACdF,EAAAA,cAAA,OAAKE,UAAU,iDACZ/C,GACCA,EAAQmC,KACNqB,GAEEX,EAAAA,cAACY,EAAAA,KAAI,CACHC,IAAKF,EAAOG,UACZC,GAAI,eAAeJ,EAAOG,YAC1BZ,UAAU,sGAEVF,EAAAA,cAAA,WACEA,EAAAA,cAAA,KAAGE,UAAU,yCACVc,IAAML,EAAOb,MAAMmB,OAAO,iBAG7BjB,EAAAA,cAAA,KAAGE,UAAU,SAAQ,IAAES,EAAOO,eAU/C,C","sources":["webpack://gatsby-starter-default/./src/pages/blog-posts.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Layout from '../components/layout';\nimport { Link } from 'gatsby';\nimport dayjs from 'dayjs';\nimport { FilterBar } from '../components/FilterBar';\n// import GridCards from '../components/GridCards';\nconst sessionsName = 'blog-post-filters';\n\nconst SearchBlogPosts = ({ location }) => {\n  const [query, setQuery] = useState(``);\n  const [results, setResults] = useState([]);\n  const contentfulType = 'ContentfulBlogPost';\n\n  const handleSearchQuery = () => {\n    let pubDateSelect = document.querySelector('#publicationDate');\n    let pubDateValue = pubDateSelect.value;\n\n    sessionStorage.setItem(sessionsName, JSON.stringify({ pubDateValue }));\n\n    setQuery(\n      `+title:* +date:${pubDateValue} +contentfulType:${contentfulType}`\n    );\n  };\n\n  const matchFiltersToSessions = () => {\n    let pubDateSelect = document.querySelector('#publicationDate');\n    let savedSessionsQuery = JSON.parse(sessionStorage.getItem(sessionsName));\n\n    // set date filter to sessions\n    if (savedSessionsQuery && savedSessionsQuery.pubDateValue) {\n      Array.from(pubDateSelect.options).forEach((option, idx) => {\n        if (option.value === savedSessionsQuery.pubDateValue) {\n          pubDateSelect.selectedIndex = idx;\n        }\n      });\n    }\n    setQuery(\n      `+title:* +date:${pubDateSelect.value} +contentfulType:${contentfulType}`\n    );\n  };\n\n  const clearFilters = () => {\n    sessionStorage.removeItem(sessionsName);\n    setQuery(`+title:* +date:*`);\n    document.querySelector('#publicationDate').selectedIndex = 0;\n    location.search = ''; // tk remove from url\n  };\n\n  const handleUrlParams = useCallback(() => {\n    let pubDateParam = new URLSearchParams(location.search).get('year') || '*';\n\n    setPubDateQuery(pubDateParam);\n    setQuery(\n      `+title:* +date:${pubDateParam} +contentfulType:${contentfulType}`\n    );\n  }, [location]);\n\n  const setPubDateQuery = paramVal => {\n    let pubDateSelect = document.querySelector('#publicationDate');\n    Array.from(pubDateSelect.options).forEach((option, idx) => {\n      if (option.value === paramVal) {\n        pubDateSelect.selectedIndex = idx;\n      }\n    });\n  };\n\n  const sortByDateDesc = (results) => {\n    return results.sort(\n      (a, b) => new Date(b.date) - new Date(a.date)\n    );\n  }\n  useEffect(() => {\n    const lunrIndex = window.__LUNR__['en'];\n    handleUrlParams();\n    matchFiltersToSessions();\n    const searchResults = lunrIndex.index.search(query);\n    const searchResultsMapped = searchResults.map(({ ref }) => {\n      return lunrIndex.store[ref];\n    });\n    setResults(sortByDateDesc(searchResultsMapped));\n  }, [query, handleUrlParams]);\n\n  return (\n    <>\n      <Layout>\n        <>\n          <div className=\"px-8\">\n            <div className=\"grid lg:grid-cols-5 md:grid-cols-5\">\n              <div className=\"col-span-10 mb-5 notched notched--border\">\n                <h1 className=\"generic-heading-1\">Blog Posts</h1>\n              </div>\n            </div>\n          </div>\n          <FilterBar\n            handleClearFilters={clearFilters}\n            handleSearchQuery={handleSearchQuery}\n            listType=\"blog-post\"\n          />\n\n          <div className={`px-8 py-4 list`}>\n            <div className=\"grid grid lg:grid-cols-4 md:grid-cols-4 gap-4\">\n              {results &&\n                results.map(\n                  result => (\n                    // item.prettyUrl && (\n                    <Link\n                      key={result.prettyUrl}\n                      to={`/blog-posts/${result.prettyUrl}`}\n                      className=\"lg:col-span-1 md:col-span-2 sm:col-span-4 notched notched--border notched--border--hover list-item\"\n                    >\n                      <div>\n                        <p className=\"publicationDate publicationDate--blog\">\n                          {dayjs(result.date).format('MMMM D, YYYY')}\n                        </p>\n\n                        <p className=\"title\"> {result.title}</p>\n                      </div>\n                    </Link>\n                  )\n                  // )\n                )}\n            </div>\n          </div>\n        </>\n      </Layout>\n    </>\n  );\n};\n\nexport default SearchBlogPosts;\n"],"names":["sessionsName","_ref","location","query","setQuery","useState","results","setResults","contentfulType","handleUrlParams","useCallback","pubDateParam","URLSearchParams","search","get","setPubDateQuery","paramVal","pubDateSelect","document","querySelector","Array","from","options","forEach","option","idx","value","selectedIndex","useEffect","lunrIndex","window","__LUNR__","matchFiltersToSessions","savedSessionsQuery","JSON","parse","sessionStorage","getItem","pubDateValue","searchResultsMapped","index","map","_ref2","ref","store","sort","a","b","Date","date","sortByDateDesc","React","Layout","className","FilterBar","handleClearFilters","clearFilters","removeItem","handleSearchQuery","setItem","stringify","listType","result","Link","key","prettyUrl","to","dayjs","format","title"],"sourceRoot":""}