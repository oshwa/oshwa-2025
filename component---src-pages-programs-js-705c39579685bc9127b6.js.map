{"version":3,"file":"component---src-pages-programs-js-705c39579685bc9127b6.js","mappings":"4LAGO,MAAMA,EAAgBC,IAAgE,IAA/D,MAAEC,EAAK,YAAEC,EAAW,eAAEC,EAAc,QAAEC,EAAO,SAAEC,GAAUL,EACrF,OACEM,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKC,UAAU,4CACZJ,EACCG,EAAAA,cAAA,OACEC,UAAU,6GACVC,MAAO,CAAEC,gBAAiB,OAAON,QAGnCG,EAAAA,cAAA,OAAKC,UAAU,+GAEjBD,EAAAA,cAAA,OAAKC,UAAU,2FACZH,GACCE,EAAAA,cAAA,QAAMC,UAAU,iBAAiBH,GAEnCE,EAAAA,cAAA,MAAIC,UAAU,qBAAqBN,GAClCC,GACCI,EAAAA,cAACI,EAAAA,EAAY,CAACC,QAAST,IAExBG,GACCC,EAAAA,cAAA,KAAGC,UAAU,YAAYF,KAI3B,C,+CCeV,IAxCmBL,IAAoC,IAAnC,MAAEY,EAAK,aAAEC,EAAY,KAAEC,GAAMd,EAC/C,OACEM,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,OAAKC,UAAU,2DACH,kBAATO,GACCR,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,KACES,IAAI,gBACJC,KAAK,mCACLT,UAAU,sGAEVD,EAAAA,cAAA,UAAI,kBAENA,EAAAA,cAAA,KACES,IAAI,oBACJC,KAAK,mDACLT,UAAU,sGAEVD,EAAAA,cAAA,UAAI,uBAITM,GACCA,EAAMK,KAAIC,GACRZ,EAAAA,cAACa,EAAAA,KAAI,CACHJ,IAAKG,EAAKjB,MACVmB,GAAI,IAAIP,KAAgBK,EAAKG,UAAYH,EAAKG,UAAYH,EAAKjB,QAE/DM,UAAU,sGAEVD,EAAAA,cAAA,UAAKY,EAAKjB,YAKnB,C,qCCjCP,IAJqBD,IAAkB,IAAjB,QAAEW,GAASX,EAC/B,OAAOM,EAAAA,cAAA,QAAMC,UAAU,mBAAmBe,wBAAyB,CAAEC,OAAQZ,IAAa,C,oFCgD5F,UA7CqBa,KACnB,MA0BMC,GA1BOC,EAAAA,EAAAA,gBAAe,cA0BNC,0BAA0BC,MAAM,GAAGC,KAEzD,OACEvB,EAAAA,cAACwB,EAAAA,EAAM,KACLxB,EAAAA,cAACP,EAAAA,EAAa,CACZE,MAAOwB,EAASxB,MAChBC,YAAauB,EAASM,iBAAiBC,uBAAuB,GAAGC,KACjE9B,eAAgBsB,EAASS,YAAYC,MAEvC7B,EAAAA,cAAC8B,EAAAA,EAAS,CACRxB,MAAOa,EAASY,SAChBxB,aAAa,WACbC,KAAK,kBAEA,C","sources":["webpack://gatsby-starter-default/./src/components/GenericHeader.js","webpack://gatsby-starter-default/./src/components/GridCardsB.js","webpack://gatsby-starter-default/./src/components/MarkdownText.js","webpack://gatsby-starter-default/./src/pages/programs.js"],"sourcesContent":["import React from 'react';\nimport MarkdownText from './MarkdownText';\n\nexport const GenericHeader = ({ title, description, headerImageUrl, program, location }) => {\n  return (\n    <div className=\"px-8\">\n      <div className=\"grid lg:grid-cols-5 md:grid-cols-5 gap-4\">\n        {headerImageUrl ?\n          <div\n            className=\"lg:col-span-3 md:col-span-5 sm:col-span-5 h-full notched notched--bg notched--bg--img header-img-container\"\n            style={{ backgroundImage: `url(${headerImageUrl})` }}>\n          </div>\n          :\n          <div className=\"lg:col-span-3 md:col-span-5 sm:col-span-5 h-full notched notched--bg notched--bg--img header-img-container\"></div>\n        }\n        <div className=\"generic-header lg:col-span-2 md:col-span-5 sm:col-span-5 h-full notched notched--border\">\n          {program && (\n            <span className=\"program-title\">{program}</span>\n          )}\n          <h1 className=\"generic-heading-1\">{title}</h1>\n          {description && (\n            <MarkdownText content={description} />\n          )}\n          {location && (\n            <p className=\"location\">{location}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst GridCardsB = ({ items, pageLocation, page }) => {\n  return (\n    <>\n      <div className=\"px-8 py-4 list\">\n        <div className=\"grid lg:grid-cols-4 md:grid-cols-4 sm:grid-cols-4 gap-4\">\n          {page === 'programs-page' && (\n            <>\n              <a\n                key=\"Certification\"\n                href=\"https://certification.oshwa.org/\"\n                className=\"lg:col-span-1 md:col-span-2 sm:col-span-4 notched notched--border notched--border--hover list-item\"\n              >\n                <h3>Certification</h3>\n              </a>\n              <a\n                key=\"Certification API\"\n                href=\"https://certificationapi.oshwa.org/documentation\"\n                className=\"lg:col-span-1 md:col-span-2 sm:col-span-4 notched notched--border notched--border--hover list-item\"\n              >\n                <h3>Certification API</h3>\n              </a>\n            </>\n          )}\n          {items &&\n            items.map(item => (\n              <Link\n                key={item.title}\n                to={`/${pageLocation}/${item.prettyUrl ? item.prettyUrl : item.title\n                  }`}\n                className=\"lg:col-span-1 md:col-span-2 sm:col-span-4 notched notched--border notched--border--hover list-item\"\n              >\n                <h3>{item.title}</h3>\n              </Link>\n            ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GridCardsB;\n","import React from 'react';\n\nconst MarkdownText = ({ content }) => {\n  return <span className=\"markdown-content\" dangerouslySetInnerHTML={{ __html: content }} />;\n};\n\nexport default MarkdownText;\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport { GenericHeader } from '../components/GenericHeader';\nimport GridCards from '../components/GridCardsB';\n\nconst ProgramsPage = () => {\n  const data = useStaticQuery(graphql`\n    query ProgramsPageQuery {\n      allContentfulProgramsPage {\n        edges {\n          node {\n            title\n            headerImage {\n              url\n            }\n            shortDescription {\n              shortDescription\n              childrenMarkdownRemark {\n                html\n              }\n            }\n            programs {\n              id\n              title\n              prettyUrl\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const pageData = data.allContentfulProgramsPage.edges[0].node;\n\n  return (\n    <Layout>\n      <GenericHeader\n        title={pageData.title}\n        description={pageData.shortDescription.childrenMarkdownRemark[0].html}\n        headerImageUrl={pageData.headerImage.url}\n      />\n      <GridCards\n        items={pageData.programs}\n        pageLocation=\"programs\"\n        page=\"programs-page\"\n      />\n    </Layout>\n  );\n};\n\nexport default ProgramsPage;\n"],"names":["GenericHeader","_ref","title","description","headerImageUrl","program","location","React","className","style","backgroundImage","MarkdownText","content","items","pageLocation","page","key","href","map","item","Link","to","prettyUrl","dangerouslySetInnerHTML","__html","ProgramsPage","pageData","useStaticQuery","allContentfulProgramsPage","edges","node","Layout","shortDescription","childrenMarkdownRemark","html","headerImage","url","GridCards","programs"],"sourceRoot":""}